;;; -*- Mode: TDL; Coding: utf-8 -*-

;;; Zhong [|] Grammar
;;;
;;; created at:
;;;     Tue Jun 30 19:43:27 UTC 2009
;;; based on Matrix customization system version of:
;;;     Tue Jun 23 20:36:41 UTC 2009
;;;
;;; Authors: Nat Hillard, Dan Flickinger, Chunlei Yang
;;;


;; SSH 2014-09-04: Teh style feature for efficient generation
sign :+
 [ STYLE style,
   IDIOMATIC luk ].

;;; STYLE
style := avm & 
 [ WRITTEN luk ].
strict := style &
 [ WRITTEN + ].
robust := style.
spoken := robust & 
 [ WRITTEN - ].
unproductive := robust.
dialect := robust. 

lex-rule :+ 
 [ STYLE #style,
   DTR.STYLE #style ].

basic-unary-phrase :+ 
  [ STYLE #style,
    ARGS < [ STYLE #style ] > ].


;; SSH 2014-12-19: BOUND is introduced. Lexical items with [BOUND +]
;; cannot be combined with the other of itself.
synsem :+ 
 [ PUNCTUATED luk,
   SPART spart,
   BOUND luk ].

spart := avm.
not-crs := spart.
not-ma := spart.
crs := not-ma.
ma := not-crs.
not-crs-not-ma := not-crs & not-ma.


;; SSH 2014-10-24: for chart mapping
;; MATRIX REDEFINITION
;; make STEM of type orthog(raphy) to pass up from/to/form
sign-min := avm &
  [ STEM orthog ].

orthog := cons &
  [ FROM string,
    TO string ].

;; SSH 2015-01-26: compound lexical items
cpd := icons. 


card_rel := named_rel.

card-relation := named-relation & arg1-relation &
  [ PRED card_rel ].


; SSH 2014-10-20: type hiearchy for classifers
classifier_x_rel := predsort.
个_x_rel := classifier_x_rel.
只_x_rel := 个_x_rel.
匹_x_rel := 只_x_rel.
条_x_rel := 只_x_rel.
台_x_rel := 个_x_rel. 
根_x_rel := 个_x_rel.
件_x_rel := 个_x_rel.
些_x_rel := 个_x_rel.

#|
lex-sense-default := lex-item &
 [ SYNSEM.LOCAL.CAT.HEAD.KEYS.KEY 个_x_rel ].
lex-sense-animal := lex-sense-default &
 [ SYNSEM.LOCAL.CAT.HEAD.KEYS.KEY 只_x_rel ].
lex-sense-horse := lex-sense-animal &
 [ SYNSEM.LOCAL.CAT.HEAD.KEYS.KEY 匹_x_rel ].
lex-sense-machine := lex-sense-default &
 [ SYNSEM.LOCAL.CAT.HEAD.KEYS.KEY 台_x_rel ].
|#


lzg := avm. 
le := lzg.
zhe := lzg.
guo := lzg.
no-lzg := lzg.
le+zhe := le & zhe.
le+guo := le & guo.
zhe+guo := zhe & guo.
le+zhe+guo := le & zhe & guo.

+vjp :+
 [ LZG lzg ].

marker-or-punct := head & 
  [ MOD <> ].
marker := marker-or-punct.
punct := marker-or-punct.

noun :+ 
 [ HON bool ].

;; SSH 2014-10-10 nominalizer 的 'de'
nm := noun.

hon-lex := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.HON + ]. 

num :+ 
 [ CARDINAL bool ].


;; SSH 2014-09-02: Gender is necessary to distinguish he and she. 
;; 她 追赶 了 他: She chased him.
;; In addition, Animacy is also neceesary to disinguish s(he) and it.
;; 她 追赶 了 它: She chasd it.
png :+ 
  [ PERNUM pernum,
    GENDER gender,
    ANIMACY animacy ].

;;; Pernum

pernum := *top*.
sg := pernum.
indet := pernum.
pl := pernum.
1st := pernum.
2nd := pernum.
3rd := pernum.
1sg := 1st & sg.
2sg := 2nd & sg.
3sg := 3rd & sg.
1indet := 1st & indet.
2indet := 2nd & indet.
3indet := 3rd & indet.
1pl := 1st & pl.
1pl_incl := 1pl.
1pl_excl := 1pl.
2pl := 2nd & pl.
3pl := 3rd & pl.

;;; SSH 2014-09-02
;;; Gender 
gender := *top*.
masc := gender.
fem := gender.

;;; SSH 2014-09-02
;;; Animacy
animacy := *top*.
human := animacy.
non-human := animacy.
animate := non-human.
inanimate := non-human.

;;; Form

form := *top*.
nonfinite := form.
finite := form.

;;; Aspect


;has-aspect := aspect.
perfective := aspect.
durative := aspect.
delimitative := aspect.
;; SSH 2014-09-19: The type hierarchy for aspect should be researched
;; more. We assume here that guo and no-marking imply *imperfective*.
imperfective := aspect.
experiential := imperfective.
;; SSH 2014-09-04; blocking overgeneration
non-aspect := imperfective.



;;; Phrasal types

basic-head-comp-phrase :+ 
  [ SYNSEM.LOCAL.CAT [ MC #mc,
               VAL.SPEC #spec ],
    HEAD-DTR.SYNSEM.LOCAL.CAT [ MC #mc,
                VAL.SPEC #spec ] ].

basic-head-mod-phrase-simple :+ 
  [ SYNSEM.LOCAL [ CAT.MC #mc,
		   CONT.HOOK.INDEX #ind ],
    HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX #ind,
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].



; SSH 2014-08-25 Zhong specific head-adj-phrase This consraint was in
; the previous version of matrix.tdl, but it was removed by Antske
; Fokkens and Joshua Crowgey (2012-26-09).
head-adj-phrase :+ 
  [ HEAD-DTR.SYNSEM.MODIFIED notmod-or-rmod ].

head-adj-int-phrase :+ 
  [ SYNSEM [ L-PERIPH #lperiph,
	     R-PERIPH #rperiph ],
    HEAD-DTR.SYNSEM.R-PERIPH na-or--,
    NON-HEAD-DTR.SYNSEM [ L-PERIPH #lperiph,
			  R-PERIPH #rperiph ] ].

;; The head of head-comp-phrase can't be: ['comp']

head-comp-phrase := basic-head-1st-comp-phrase & head-initial &
  [ SYNSEM phr-synsem &
       [ LOCAL.CAT.HEAD +nvjrpdmo ],
	NON-HEAD-DTR.SYNSEM.R-PERIPH na-or-- ].

comp-head-final-phrase := basic-head-1st-comp-phrase & head-final &
  [ SYNSEM.LOCAL.CAT.HEAD +nvjrpdmo,
    NON-HEAD-DTR.SYNSEM [ R-PERIPH na-or--,
						  LOCAL.CAT.HEAD adp ] ].

;; For now, exclude time nouns as subjects
;; 
;; SSH 2014-09-26: Only phrases can be the subjects (phr-synsem)
subj-head-phrase := decl-head-subj-phrase & head-final &
  [ SYNSEM.LOCAL.CAT.MC #mc,
    HEAD-DTR.SYNSEM.LOCAL.CAT [ MC #mc,
				VAL [ SPR olist,
				      COMPS < > ],
				POSTHEAD + ],
    NON-HEAD-DTR.SYNSEM  [ R-PERIPH na-or--,
			   LOCAL [ CAT [ MC +,
					 NONSUBJ -,
					 VAL.SPR <> ],
				   CONT.HOOK.INDEX.SORT nontime-s ],
			   NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
				       REL 0-dlist ] ] ].

            
;; comp-head-phrase requires things that are [ HEAD comp ].
comp-head-phrase := basic-head-1st-comp-phrase & head-final &
  [ SYNSEM.LOCAL.CAT.HEAD comp,
    NON-HEAD-DTR.SYNSEM.R-PERIPH na-or-- ].



s-coord-phrase :+ 
[ SYNSEM.LOCAL.CAT.MC #mc,
  LCOORD-DTR.SYNSEM.LOCAL.CAT.MC #mc,
  RCOORD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].
 

;;; Coordination Strategy 1

n1-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

#|
n1-bottom-coord-rule := infl-bottom-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1",
    SYNSEM.LOCAL.COORD-REL.PRED "_and_coord_rel",
    DTR.SYNSEM.LOCAL.CAT.HEAD noun ].
|#

bottom-coord-rule := conj-first-bottom-coord-rule &
  [ SYNSEM [ LOCAL [ CAT.HEAD #head,
                     COORD + ],
             NON-LOCAL #nonloc ],
    CONJ-DTR.SYNSEM.LOCAL.CAT.HEAD conj,
    NONCONJ-DTR.SYNSEM [ LOCAL.CAT.HEAD #head,
                         NON-LOCAL #nonloc ] ].


;;; Coordination Strategy 2

vp1-top-coord-rule := basic-vp-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

#|
vp1-bottom-coord-rule := conj-first-bottom-coord-rule & 
             vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].
|#

;;; Coordination Strategy 3

n3-top-coord-rule := basic-n-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

n3-bottom-coord-rule := unary-bottom-coord-rule & n-bottom-coord-phrase &
  [ SYNSEM.LOCAL [ COORD-STRAT "3",
                   COORD-REL.PRED "_and_coord_rel" ] ].

;;; Coordination Strategy 3

np3-top-coord-rule := basic-np-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

np3-bottom-coord-rule := unary-bottom-coord-rule & np-bottom-coord-phrase &
  [ SYNSEM.LOCAL [ COORD-STRAT "3",
                   COORD-REL.PRED "_and_coord_rel" ] ].

;;; Coordination Strategy 3

vp3-top-coord-rule := basic-vp-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

vp3-bottom-coord-rule := unary-bottom-coord-rule & vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL [ COORD-STRAT "3",
                   COORD-REL.PRED "_and_coord_rel" ] ].

;;; Coordination Strategy 3

s1-top-coord-rule := basic-s-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

#|
s3-bottom-coord-rule := unary-bottom-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM.LOCAL [ COORD-STRAT "1",
                   COORD-REL.PRED "_and_coord_rel" ] ].
|#

;;; Coordination Strategy 4

n4-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "4" ].

n4-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "4" ].

n4-bottom-coord-rule := infl-bottom-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "4",
    SYNSEM.LOCAL.COORD-REL.PRED "_and_coord_rel",
    DTR.SYNSEM.LOCAL.CAT.HEAD noun ].

;;; Coordination Strategy 5

n5-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

n5-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

n5-bottom-coord-rule := conj-first-bottom-coord-rule & n-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

;;; Coordination Strategy 5

np5-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

np5-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

np5-bottom-coord-rule := conj-first-bottom-coord-rule & 
             np-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

;;; Coordination Strategy 5

vp5-top-coord-rule := basic-vp-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

vp5-mid-coord-rule := basic-vp-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

vp5-bottom-coord-rule := conj-first-bottom-coord-rule & 
             vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

;;; Coordination Strategy 5

s5-top-coord-rule := basic-s-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

s5-mid-coord-rule := basic-s-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

s5-bottom-coord-rule := conj-first-bottom-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "5" ].

;;; Coordination Strategy 6

s6-top-coord-rule := basic-s-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "6" ].

s6-mid-coord-rule := basic-s-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "6" ].

s6-bottom-coord-rule := conj-first-bottom-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "6" ].

;;; Coordination Strategy 7

s7-top-coord-rule := basic-s-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "7" ].

s7-mid-coord-rule := basic-s-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "7" ].

s7-bottom-coord-rule := conj-first-bottom-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "7" ].

;; We treat question particles as complementizers.
;; Here is the lexical type for complementizers.

adj-head-phrase :+ 
  [ HEAD-DTR.SYNSEM.L-PERIPH na-or-- ].

adj-head-phrase :+ 
  [ SYNSEM.LOCAL.CAT.MC #mc,
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

;; SSH 2014-12-19: BOUND for blocking [狗 轻轻 [地 [叫 了]].
adj-head-int-mc := adj-head-int-phrase &
  [ SYNSEM.LOCAL.CAT.NONSUBJ #ns,
    HEAD-DTR.SYNSEM.LOCAL.CAT.NONSUBJ #ns,
    NON-HEAD-DTR.SYNSEM [ BOUND na-or--,
			  LOCAL.CAT.NONSUBJ #ns ] ].

alts :+ 
  [ LE-PFV bool ].


; SSH 2014-08-26: For Topic-Comment Constructions 
; (1) This kind of types should reflect on the order of constituents
; in their names. Thus, I changed the name: head-filler-phrase to
; filler-head-phrase.  (2) I do not understand the purpose and
; function of C-CONs-coord-phraseT. Temporily, I remove it.

#|
head-filler-phrase := basic-head-filler-phrase & head-final & 
  [ SYNSEM.LOCAL.CAT [ VAL #val,
               MC #mc ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD verb,
                  VAL #val & [ SUBJ < >,
                           COMPS < >,
                           SPR < >,
                           SPEC < > ],
                  MC #mc ],
                CONT.HOOK #hook ],
    NON-HEAD-DTR.SYNSEM.NON-LOCAL.QUE 0-dlist,
    C-CONs-coord-phraseT.HOOK #hook ].
|#

filler-head-phrase := basic-head-filler-phrase & head-final & 
		      topic-comment &
  [ SYNSEM [ L-PERIPH +,
	     LOCAL.CAT [ VAL #val,
			 MC #mc ] ],
    HEAD-DTR.SYNSEM [ L-PERIPH -,
		      LOCAL [ CAT [ HEAD verb,
				    VAL #val & [ SUBJ < >,
						 COMPS < >,
						 SPR < >,
						 SPEC < > ],
				    MC #mc ],
			      CONT.HOOK #hook & [ INDEX #clause,
						  CLAUSE-KEY #clause ] ] ],
    NON-HEAD-DTR.SYNSEM [ LOCAL [ CAT.HEAD noun,
				  CONT.HOOK.INDEX #index ],
			  NON-LOCAL.QUE 0-dlist ],
    C-CONT [ HOOK #hook,
	     RELS <! !>, HCONS <! !>, 
	     ICONS <! topic &
		    [ IARG1 #clause,
                      IARG2 #index ] !> ] ].

;; SSH 2014-09-02: added [MODIFIED] for blocking overgeneration
;; SSH 2014-09-02: added [MC +] for blocking overgeneration
extracted-comp-phrase := basic-extracted-comp-phrase & 
  [ SYNSEM.MODIFIED #modified,
    HEAD-DTR.SYNSEM [ MODIFIED #modified,
		      LOCAL [ CAT [ MC +, HEAD verb ],
			      CONT.HOOK #hook ] ],
    C-CONT [ HOOK #hook, RELS <! !>, HCONS <! !>, ICONS <! !> ] ].

;; DPF 2011-06-03 - Given current analysis of relative clauses as containing
;; exactly one extracted element (which is thus relativized), we need subject
;; extr at least for e.g. MRS:53
;; DPF 2011-06-03 - HACK: stamped SPEC < [] > on mother, to avoid immediate
;; filler-head-rule application for embedded clause in "I think dog chase cat".
;; This `works' because the filler-head rule already demands that the hd-dtr
;; have empty SPEC value; note that when an extracted-subj clause is picked
;; up as a complement, the SPEC value is ignored higher up, since the verb
;; selecting the S/NP does not pass up that SPEC value, of course.
;;
extracted-subj-phrase := basic-extracted-subj-phrase & 
  [ SYNSEM [ MODIFIED #modified,
	     LOCAL.CAT [ MC -,
			 VAL.SPEC < [] > ] ],
    HEAD-DTR.SYNSEM [ MODIFIED #modified,
		      LOCAL [ CAT.VAL.SUBJ < [ LOCAL.CAT.NONSUBJ - ] >,
			      CONT.HOOK #hook ] ],
    C-CONT [ HOOK #hook, RELS <! !>, HCONS <! !>, ICONS <! !> ] ].

coord-phrase :+ 
  [ SYNSEM.NON-LOCAL.SLASH 0-dlist,
    LCOORD-DTR.SYNSEM.NON-LOCAL.SLASH 0-dlist,
    RCOORD-DTR.SYNSEM.NON-LOCAL.SLASH 0-dlist ].

;; MATRIX REDEFINITION
;; Note: Modified to allow multiple rels 

basic-determiner-lex := norm-hook-lex-item & basic-icons-lex-item & 
  [ SYNSEM [ LOCAL [ CAT [ HEAD det,
               VAL.SPEC.FIRST.LOCAL.CONT.HOOK [ INDEX #ind,
                                  LTOP #larg ] ],
             CONT.HCONS <! qeq &
                 [ HARG #harg,
                   LARG #larg ] !> ],
         LKEYS.KEYREL quant-relation &
           [ ARG0 #ind,
             RSTR #harg ] ] ].

;; SSH 2014-08-26: MATRIX REDEFINITION
infostr-marking-determiner-lex := basic-determiner-lex.


;; MATRIX REDEFINITION
;; Note: for the following, removed QUE 0-dlist -- question words can function 
;; as direct objects
;;
clause := phrasal.

;; MATRIX REDEFINITION
;; Note: Removed [QUE 0-dlist] from HEAD-DTR, to allow in-situ WH
;; 
basic-non-rel-clause := clause & head-compositional & 
  [ SYNSEM.NON-LOCAL.REL 0-dlist,
    HEAD-DTR.SYNSEM [ LOCAL.CONT.HOOK [ INDEX #index,
                                        ICONS-KEY.IARG1 #index,
                                        CLAUSE-KEY #index ],
                      NON-LOCAL.REL 0-dlist ],
    C-CONT [ RELS <! !>,
             HCONS <! !> ] ].

;; MATRIX REDEFINITION
;; Note: We removed the [QUE 0-dlist] constraint from the NON-HEAD-DTR
;; since Mandarin has in-situ WH-phrases.
;;
basic-head-subj-phrase := head-valence-phrase & binary-headed-phrase &
                          head-compositional & 
  [ SYNSEM phr-synsem & 
           [ LOCAL.CAT [ POSTHEAD +,
                         VAL [ SUBJ < >,
                               COMPS #comps,
                               SPR #spr ] ] ],
    HEAD-DTR.SYNSEM.LOCAL.CAT.VAL [ SUBJ < #synsem >,
                                    COMPS #comps,    
                                    SPR #spr ],
    NON-HEAD-DTR.SYNSEM #synsem & canonical-synsem &
           [ LOCAL.CAT.VAL [ SUBJ olist,
                             COMPS olist,
                             SPR olist ],
             NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
                         REL 0-dlist ] ],
    C-CONT [ RELS <! !>, HCONS <! !>, ICONS <! !> ] ].

;; Nouns which cannot take specifiers mark their SPR requirement
;; as OPT +.  Making the non-head daughter OPT - in this rule
;; keeps such nouns out.
;; 
;; Rules for building NPs.  Note that the Matrix uses SPR for
;; the specifier of nouns and SUBJ for the subject (specifier) of verbs.

;; MATRIX REDEFINITION
;; Note: We removed the identification of HOOK on mother and NON-HEAD-DTR,
;; since we need two subtypes of head-specifier phrsae, one whose HOOK
;; is identified with the NON-HEAD-DTR, and one where the HOOK is the same
;; as that of the HD-DTR.
;;

;;We changed the head daughter's comps list to the empty list, rather than olist
#|
basic-head-spec-phrase := head-valence-phrase & phrasal &
              binary-headed-phrase & 
  [ INFLECTED infl-satisfied,
    SYNSEM phr-synsem & [ LOCAL.CAT [ VAL [ SUBJ #subj,
                        COMPS #spcomps,
                        SPR #spr,
                        SPEC #spec ],
                      POSTHEAD #ph ],
              MODIFIED #modif ],
    HEAD-DTR [ INFLECTED infl-satisfied,
               SYNSEM [ LOCAL [ CAT [ HEAD #head,
                                      VAL [ SUBJ #subj,
                                            COMPS <> & #comps,
                                            SPR < #synsem & 
                                                  canonical-synsem . #spr >,
                                            SPEC #spec ],
                                      POSTHEAD #ph ],
                                CONT.HOOK #hdhook ],
                        MODIFIED #hmodif ] ],
    NON-HEAD-DTR.SYNSEM #synsem &
          [ LOCAL [ CAT.VAL [ SPEC < [ LOCAL [ CAT [ HEAD #head,
                             VAL.COMPS #comps ],
                           CONT.HOOK #hdhook ],
                       MODIFIED #hmodif ] >,
                  COMPS #spcomps ],
            CONT.HOOK #hook ],
        MODIFIED #modif ],
    C-CONT [ HOOK #hook,  RELS <! !>, HCONS <! !>, ICONS <! !> ] ].

head-spec-phrase := basic-head-spec-phrase & head-final &
  [ NON-HEAD-DTR.SYNSEM [ LOCAL [ CAT [ VAL.SUBJ < >,
                    HEAD det ],
                  CONT.HOOK #hook ] ],
    C-CONT.HOOK #hook ].

;; Note here, the syntactic head is the semantic head
;; note, we deleted NON-HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SUBJ < > : this is already specified in the heads
;; 
;;; DPF 21-dec-09 - use head-compositional etc instead...

head-spec-h-sem-phrase := basic-head-spec-phrase & head-final &
  [ HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD +jrpd,
			    CONT.HOOK #hook ],
    C-CONT.HOOK #hook ].

; For nominalizer head `de', which must be [HEAD noun], but which is also the
; semantic head.  Cannot easily collapse with either of the other two head-spec
; rules, since the non-head-dtr can be [HEAD det] in the hspec-hs rule where
; the head is a classifier.  FIX someday?
;
head-nom-spec-h-sem-phrase := basic-head-spec-phrase & head-final &
  [ HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD noun,
                CONT.HOOK #hook ],
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD +vjp,
    C-CONT.HOOK #hook ].
|#


;; SSH 2014-08-22 zhong specific basic-head-spec-phrase 
basic-head-spec-phrase := head-valence-phrase & phrasal &
                          binary-headed-phrase & 
  [ STYLE robust,
    INFLECTED infl-satisfied,
    SYNSEM phr-synsem & [ LOCAL [ CAT [ VAL [ SUBJ #subj,
					      SPR #spr,
					      SPEC #spec ],
					POSTHEAD #ph ],
				  CONT.HOOK.CLAUSE-KEY #clause ],
			  MODIFIED #modif ],
    HEAD-DTR [ INFLECTED infl-satisfied,
               SYNSEM [ R-PERIPH na-or--,
			LOCAL [ CAT [ HEAD #head,
				      VAL [ SUBJ #subj,
					    COMPS <> & #comps,
					    SPR < #synsem & 
						  canonical-synsem . #spr >,
					    SPEC #spec ],
                                      POSTHEAD #ph ],
				CONT.HOOK #hdhook & [ CLAUSE-KEY #clause ] ],
			MODIFIED #hmodif ] ],
    NON-HEAD-DTR.SYNSEM #synsem &
     [ R-PERIPH na-or--,
       LOCAL [ CAT.VAL.SPEC < [ LOCAL [ CAT [ HEAD #head,
					      VAL.COMPS #comps ],
					CONT.HOOK #hdhook ],
				MODIFIED #hmodif ] >,
	       CONT.HOOK.CLAUSE-KEY #clause ],
       MODIFIED #modif ],
    C-CONT [ RELS <! !>, HCONS <! !>, ICONS <! !> ] ].


head-spec-phrase := basic-head-spec-phrase & head-final &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    NON-HEAD-DTR.SYNSEM [ LOCAL [ CAT [ VAL.SUBJ < >,
                    HEAD det ],
                  CONT.HOOK #hook ] ],
    C-CONT.HOOK #hook ].


;; Note here, the syntactic head is the semantic head
;; note, we deleted NON-HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SUBJ < > : this is already specified in the heads
;; 
;;; DPF 21-dec-09 - use head-compositional etc instead...

head-spec-h-sem-phrase := basic-head-spec-phrase & head-final &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS #spcomps,
    HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD +jrpd,
			    CONT.HOOK #hook ],
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS #spcomps,
    C-CONT.HOOK #hook ].

; For nominalizer head `de', which must be [HEAD noun], but which is also the
; semantic head.  Cannot easily collapse with either of the other two head-spec
; rules, since the non-head-dtr can be [HEAD det] in the hspec-hs rule where
; the head is a classifier.  FIX someday?
;

head-nom-spec-h-sem-phrase := basic-head-spec-phrase & head-final &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS #spcomps,
    HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD noun,
                CONT.HOOK #hook ],
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT [ HEAD +vjp,
                    VAL.COMPS #spcomps ],
    C-CONT.HOOK #hook ].

;; Bare NP phrase.  Consider modifying the PRED value of the quantifier 
;; relation introduced to match the semantic effect of bare NPs in your 
;; language.

;; MATRIX REDEFINITION
;; Note: we removed the SPEC <> constraint
;;; DPF - motivate? - shouldn't the head at least propagate SPEC to mother?

basic-bare-np-phrase := head-only &
  [ SYNSEM.LOCAL.CAT.VAL [ SPR < >,
                           SUBJ < >,
                           COMPS < > ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT.VAL [ SPR < [ LOCAL.CAT.HEAD det,
                                              OPT + ] >,
                                      SUBJ < >,
                                      COMPS olist ],
                            CONT.HOOK [ INDEX #index,
                                        LTOP #larg ] ],
    C-CONT [ RELS <! quant-relation &
                   [ LBL #ltop,
                     ARG0 #index,
                     RSTR #harg ] !>,
             HCONS <! qeq & 
                    [ HARG #harg,
                      LARG #larg ] !>,
             ICONS <! !>,
             HOOK [ INDEX #index,
                    LTOP #ltop ] ] ].

bare-np-phrase := basic-bare-np-phrase &
  [ SYNSEM [ LOCAL.CAT [ HEAD noun,
             NONSUBJ #ns ],
         NON-LOCAL.SLASH 0-dlist ],
    HEAD-DTR.SYNSEM.LOCAL.CAT.NONSUBJ #ns,
    C-CONT.RELS <! [ PRED "exist_q_rel" ] !> ].

;; CL-phrase => nominal phrase
basic_bare-nominal-phrase := unary-phrase &
  [ SYNSEM.LOCAL [ CAT [ HEAD noun,
                         VAL [ SPR < [ LOCAL.CAT.HEAD det,
                                       OPT + ] >,
                               SUBJ < >,
                               COMPS < > ],
                         POSTHEAD +,
                         NONSUBJ #ns ],
                   COORD -,
                   CONT.HOOK #hook & [ INDEX.SORT nontime-s ] ],
    ARGS < [ SYNSEM.LOCAL.CAT [ VAL [ SUBJ < >,
                                      SPR olist,
                                      COMPS < > ],
                                NONSUBJ #ns ] ] >,
    C-CONT [ RELS <! noun-relation &
                   [ PRED "generic_nom_rel",
                     LBL #ltop,
                     ARG0 #index ] !>,
             HCONS <! !>,
             ICONS <! !>,
             HOOK #hook &
                  [ LTOP #ltop,
                    INDEX #index ] ] ].

bare-nominal-classifier-phrase := basic_bare-nominal-phrase &
  [ ARGS < [ SYNSEM.LOCAL.CAT.HEAD +jd &
             [ MOD < [ LOCAL.CONT.HOOK [ LTOP #ltop,
                             INDEX #index ] ] > ] ] >,
    C-CONT.HOOK [ LTOP #ltop,
          INDEX #index ] ].

bare-nominal-det-phrase := basic_bare-nominal-phrase &
  [ ARGS < [ SYNSEM.LOCAL.CAT [ HEAD det,
                VAL.SPEC < [ LOCAL.CONT.HOOK 
                           [ LTOP #ltop,
                             INDEX #index ] ] > ] ] >,
    C-CONT.HOOK [ LTOP #ltop,
          INDEX #index ] ].

; Restrict head-dtr to non-empty SPR, to avoid spurious ambiguity.
;
meas-np-phrase := head-final & head-valence-phrase & phrasal &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ < >,
                           SPR < >,
                           COMPS < > ],
    NON-HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD num,
                                      VAL.SPR < > ],
                                CONT.HOOK [ LTOP #ltop,
                                            INDEX #nhind ] ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD noun,
                            CONT.HOOK [ LTOP #ltop,
                                        INDEX #hind ] ],
    C-CONT [ HOOK.INDEX #hind,
             RELS <! [ LBL #ltop,
                       PRED "measure-rel",
                       ARG1 #hind,
                       ARG2 #nhind ],
                   quant-relation &
                   [ PRED "exist_q_rel",
                     ARG0 #hind,
               RSTR #harg ] !>,
             HCONS <! qeq & 
                    [ HARG #harg,
                      LARG #ltop ] !>,
             ICONS <! !> ] ].


;; SSH 2014-12-19: 追赶 张三 ！
;; non-asepct & main clause
imperative-phrase := imp-head-opt-subj-phrase &
  [ SYNSEM [ LOCAL.CAT.HEAD verb,
	     NON-LOCAL.SLASH 0-dlist ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT.MC +,
			    CONT.HOOK.INDEX.E.ASPECT non-aspect ] ].

;; DPF 27-jul-11 - Removed HEAD-DTR..MODIFIED notmod to allow "old dog who 
;; can bark" |一 只 会 叫 的 老 狗|
;;
noun-noun-compound-phrase := head-final &
  [ SYNSEM [ LOCAL.CAT #cat,
             NON-LOCAL #nonloc ],
    HEAD-DTR.SYNSEM lex-synsem &
                [ LOCAL [ CAT #cat & 
                              [ HEAD noun,
                                VAL [ SPR < synsem >,
                                      COMPS < > ] ],
                          CONT.HOOK [ LTOP #ltop,
                                      INDEX #hind ] ],
                  NON-LOCAL #nonloc ],
    NON-HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD noun,
                                      VAL [ SPR < synsem >,
                                            COMPS < > ],
                                      POSTHEAD - ],
                                CONT.HOOK [ LTOP #larg,
                                            INDEX #nhind ] ],
    C-CONT [ HOOK [ LTOP #ltop,
            INDEX #hind ],
             RELS <! arg12-relation &
                   [ PRED "noun-noun-cpd-rel",
                     LBL #ltop,
                     ARG1 #hind,
                     ARG2 #nhind ],
                   quant-relation &
                   [ PRED "exist_q_rel",
                     ARG0 #nhind,
                     RSTR #harg ] !>,
             HCONS <! qeq & [ HARG #harg,
                              LARG #larg ] !>,
             ICONS <! !> ] ].

;; SSH 2014-12-19: phr-synsem is added.
nom-de-noun-compound-phrase := head-final &
  [ SYNSEM phr-synsem &
           [ LOCAL.CAT #cat,
             NON-LOCAL #nonloc ],
    HEAD-DTR.SYNSEM phr-synsem & [ LOCAL [ CAT #cat & 
					       [ HEAD noun,
						 VAL [ COMPS < > ] ],
					   CONT.HOOK [ LTOP #ltop,
						       INDEX #hind ] ],
				   NON-LOCAL #nonloc ],
    NON-HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD noun,
                                      VAL [ SPR < anti-synsem >,
                                            COMPS < > ],
                                      POSTHEAD - ],
                                CONT.HOOK [ LTOP #larg,
                                            INDEX #nhind ] ],
    C-CONT [ HOOK [ LTOP #ltop,
            INDEX #hind ],
             RELS <! arg12-relation &
                   [ PRED "noun-noun-cpd-rel",
                     LBL #ltop,
                     ARG1 #hind,
                     ARG2 #nhind ],
                   quant-relation &
                   [ PRED "exist_q_rel",
                     ARG0 #nhind,
                     RSTR #harg ] !>,
             HCONS <! qeq & [ HARG #harg,
                              LARG #larg ] !>,
             ICONS <! !> ] ].

;; SSH 2015-01-14: V-V compounds 
verb-verb-compound-phrase := head-initial &
  [ SYNSEM [ LOCAL.CAT [ HEAD #head,
			 VAL [ SPR #spr,
			       SPEC #spec ],
			 MC luk, 
			 MKG #mkg,
			 HC-LIGHT #hclight, 
			 POSTHEAD #posthead,
			 NONSUBJ #nonsubj ],
	     NON-LOCAL #nonloc ],
    HEAD-DTR.SYNSEM lex-synsem &
                [ LOCAL [ CAT [ HEAD #head & verb & [ AUX - ],				
				VAL [ SPR #spr,
				      SPEC #spec ],
				MC na-or--,
				MKG #mkg,
				HC-LIGHT #hclight, 
				POSTHEAD #posthead,
				NONSUBJ #nonsubj ],
			  CONT [ HOOK [ LTOP #ltop,
					INDEX #arg1 ] ] ],
                  NON-LOCAL #nonloc ],
    NON-HEAD-DTR.SYNSEM [ LIGHT +,
			  LOCAL [ CAT [ HEAD +vj & [ AUX - ],
					MC na-or-- ],
				  CONT.HOOK.INDEX #arg2 ] ],
    C-CONT [ HOOK [ LTOP #ltop,
		    INDEX #arg1 ],
	     RELS <! !>,
             HCONS <! !>,
             ICONS <! cpd & [ IARG1 #arg1, 
			      IARG2 #arg2 ] !> ] ].


;; Make temporal NPs into adposition phrases
np-adp-phrase := unary-phrase &
  [ SYNSEM.LOCAL.CAT [ HEAD adp & 
                [ MOD < [ LOCAL intersective-mod &
                        [ CAT [ HEAD verb,
                            VAL [ COMPS < >,
                              SUBJ < [] > ] ],
                          CONT.HOOK [ LTOP #ltop,
                              INDEX #modind ] ]]> ],
               VAL [ SPR < >,
                 SUBJ < >,
                 COMPS < > ] ],
    ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD noun,
                  VAL.SPR < > ],
                CONT.HOOK.INDEX #nind & [ SORT time-s,
                              SPECI - ] ] ] >,
    C-CONT [ HOOK [ LTOP #ltop,
            INDEX #index,
            XARG #modind ],
         RELS <! arg12-ev-relation &
           [ LBL #ltop,
             PRED "temp-mod-rel",
             ARG0 #index,
             ARG1 #modind,
             ARG2 #nind ] !>,
         HCONS <! !>,
         ICONS <! !> ] ].

head-opt-comp-phrase := basic-head-opt-comp-phrase &
  [ SYNSEM phr-synsem ].

; for sentential subjects
sent-subj-phrase := head-valence-phrase & head-only &
  [ SYNSEM [ LOCAL.CAT.VAL [ SUBJ < [ LOCAL [ CAT [ HEAD +vjp,
                            VAL [ SUBJ < >,
                              SPR < >,
                              COMPS < > ] ],
                          CONT.HOOK.LTOP #sltop ] ] >,
                 SPR < >,
                 COMPS < > ],
	     LIGHT - ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT [ VAL [ SUBJ < [ LOCAL.CAT.HEAD noun ] >,
                    COMPS olist ],
                  MC na ],
                CONT.HOOK [ LTOP #ltop,
                    INDEX #index,
                    XARG #xarg ] ],
    C-CONT [ HOOK [ LTOP #ltop,
            INDEX #index ],
         RELS <! !>,
         ICONS <! !>,
         HCONS <! qeq & [ HARG #xarg,
                  LARG #sltop ] !> ] ].


;; MATRIX change: promoted SF feature from event-only to individual,
;; in order to simplify allowing sentential subjects while still excluding
;; imperatives
individual :+
  [ SF iforce ].

;; MATRIX addition: Need to distinguish non-coordinated entities

non-coord-index := event-or-ref-index.
non-coord-event := non-coord-index & event.
non-coord-ref-ind := non-coord-index & ref-ind.

;; Semantic sorts, initially just to distinguish temporal and non-temporal Ns

time-s := semsort.
nontime-s := semsort.

;; MATRIX redefinition: Adopted GTOP of modern Matrix, but also relaxed
;; constraint on XARG to allow for sentential subjects (with handle as XARG).
hook := avm &
  [ GTOP handle,
    LTOP handle,
    INDEX individual,
    XARG semarg,
    ICONS-KEY icons,
    CLAUSE-KEY event ].

;; MATRIX redefinition, to allow noun heads to discharge optional complements
;;
basic-head-opt-comp-phrase := head-valence-phrase & head-only &
                              head-compositional &
  [ INFLECTED #infl,
    SYNSEM canonical-synsem &
       [ LOCAL.CAT [ VAL [ SUBJ #subj,
                           COMPS #comps,
                           SPR #spr,
                           SPEC #spec ],
                     MC #mc,
                     POSTHEAD #ph ],
         MODIFIED #mod ],
    HEAD-DTR [ INFLECTED #infl & infl-satisfied,
               SYNSEM [ LOCAL [ CAT [ VAL [ SUBJ #subj,
                                            COMPS < unexpressed &
                                                    [ OPT +,
                                                      OPT-CS #def,
                                                      LOCAL.CONT.HOOK [ INDEX #index & [ COG-ST #def ],
                                                                        ICONS-KEY #ikey,
                                                                        CLAUSE-KEY #ckey ] ] . #comps >,
                                            SPR #spr,
                                            SPEC #spec ],
                                      MC #mc,
                                      POSTHEAD #ph ],
                                CONT.HOOK.INDEX individual ],
                        MODIFIED #mod ] ],
    C-CONT [ RELS <! !>,
             HCONS <! !>,
             ICONS <! #ikey & non-focus & [ IARG1 #ckey,
                                            IARG2 #index ] !> ] ].


; head-gerundive-phrase := head-only &
;   [ SYNSEM canonical-synsem & 
; 	   [ LOCAL.CAT.HEAD.MOD < [] > ],
;     HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD verb ].

; 着了过 aspect markers & sentence final 了 & sentence final question particle 
comp-marker-phrase := marker-final-phrase & head-initial & 
		      head-valence-phrase & head-compositional &
  [ SYNSEM phr-synsem & [ L-PERIPH #lperiph,
			  R-PERIPH #rperiph,
			  PUNCTUATED #punctuated,
			  SPART #spart,
			  LOCAL.CAT [ VAL [ SUBJ #subj,
					    COMPS #comps,
					    SPR #spr,
					    SPEC #spec ],
				      POSTHEAD #ph ] ],
    HEAD-DTR.SYNSEM  #synsem & [ PUNCTUATED na-or--,
				 LOCAL [ CAT [  VAL [ SUBJ #subj,
						      COMPS #comps,
						      SPR #spr,
						      SPEC #spec ],
						POSTHEAD #ph ] ] ],
    NON-HEAD-DTR.SYNSEM [ L-PERIPH #lperiph,
			  R-PERIPH #rperiph,
			  PUNCTUATED #punctuated,
			  SPART #spart,
			  LOCAL.CAT [ HEAD marker-or-punct,
				      VAL.COMPS < #synsem > ] ],
    C-CONT [ RELS <! !>,
             HCONS <! !>,
	     ICONS <! !> ] ].


;; DPF 2014-08-01 - Added unary and binary bridging rules to accommodate robust
;; full-forest treebanking.  The strategy is to pump each normal edge in the
;; chart to a "bridge head" edge via the unary rule, and then combine two
;; adjacent such bridge-head edges using the binary rule.  This strategy,
;; proposed by Woodley Packard, results in a mere doubling of the number of
;; edges in each cell of the chart, rather than the square of the number of
;; normal edges that resulted from trying just a binary bridging rule that
;; accepted either bridge or normal edges.
;;

bridge-head := head-min &
  [ BRIDGED luk ].

bridge-binary-phrase := basic-binary-phrase &
  [ SYNSEM [ LOCAL [ CAT [ HEAD bridge-head & [ BRIDGED + ],
                           VAL [ SUBJ < >,
                                 SPR < >,
                                 COMPS < > ] ] ],
             NON-LOCAL non-local-none ],
    C-CONT [ HOOK [ LTOP #lbl, INDEX #arg0 ],
	     RELS <! [ LBL #lbl,
		       PRED "bridge_x_rel",
		       ARG0 #arg0,
		       ARG1 #ind,
		       ARG2 #rind ] !>,
             HCONS <! !>,
	     ICONS <! !> ],
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD bridge-head & [ BRIDGED - ],
			    CONT.HOOK.INDEX #ind ] ],
           [ SYNSEM.LOCAL [ CAT.HEAD bridge-head,
			    CONT.HOOK.INDEX #rind ] ] > ].

bridge-unary-phrase := basic-unary-phrase &
  [ SYNSEM [ LOCAL [ CAT [ HEAD bridge-head,
                           VAL [ SUBJ < >,
                                 SPR < >,
                                 COMPS < > ] ] ],
             NON-LOCAL non-local-none ],
    C-CONT [ HOOK #hook,
	     RELS <! !>,
             HCONS <! !>,
	     ICONS <! !> ],
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD head,
			    CONT.HOOK #hook ] ] > ].

