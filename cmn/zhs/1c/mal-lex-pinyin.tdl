和_⚠_c_py := conj_-_e_le &
  """
  using "和" to coordinate clauses.
  <nex>他 不 学 中文 ， 和 不 学 法文 。
  <nex>他 学 中文 ， 和 学 法文 。
  """
  [ STEM < "he2" >,
    SYNSEM [ LOCAL.CAT.HEAD.CHAR [ FCHAR "和",
                                   LENGTH one ],
             LKEYS.KEYREL.PRED "_和_c_⚠_rel" ],
    TRAITS native_token_list ].

和_⚠_c_py2 := conj_-_e_le &
  """
  using "和" to coordinate clauses.
  <nex>他 不 学 中文 ， 和 不 学 法文 。
  <nex>他 学 中文 ， 和 学 法文 。
  """
  [ STEM < "he" >,
    SYNSEM [ LOCAL.CAT.HEAD.CHAR [ FCHAR "和",
                                   LENGTH one ],
             LKEYS.KEYREL.PRED "_和_c_⚠_rel" ],
    TRAITS native_token_list ].

也_⚠_r_py := adv_-_scop_le &
  """
  A mal-lexical entry for 也, that allows it to be placed before the suject (i.e. as sentencial adverb)
  <nex> 我 学 工程 ， 也 我 学 中文 。
  """
  [ STEM < "ye3" >,
    SYNSEM [ LOCAL.CAT.HEAD.CHAR [ FCHAR "也",
                                   LENGTH one ],
             LKEYS.KEYREL.PRED "_也_a_⚠_rel" ],
    TRAITS native_token_list ].

也_⚠_r_py2 := adv_-_scop_le &
  """
  A mal-lexical entry for 也, that allows it to be placed before the suject (i.e. as sentencial adverb)
  <nex> 我 学 工程 ， 也 我 学 中文 。
  """
  [ STEM < "ye" >,
    SYNSEM [ LOCAL.CAT.HEAD.CHAR [ FCHAR "也",
                                   LENGTH one ],
             LKEYS.KEYREL.PRED "_也_a_⚠_rel" ],
    TRAITS native_token_list ].

吗_⚠_qp_py := x_-_qpart_⚠_le &
  """
  This mal 吗 is attaching to sentences that are already a question.
  <> 他 不 学 中文
  """
  [ STEM < "ma3" >,
    SYNSEM.LOCAL.CAT.HEAD.CHAR [ FCHAR "吗",
                                 LENGTH one ],
    TRAITS native_token_list ].

吗_⚠_qp_py2 := x_-_qpart_⚠_le &
  """
  This mal 吗 is attaching to sentences that are already a question.
  <> 他 不 学 中文
  """
  [ STEM < "ma" >,
    SYNSEM.LOCAL.CAT.HEAD.CHAR [ FCHAR "吗",
                                 LENGTH one ],
    TRAITS native_token_list ].

是_⚠_cop_py := v_adj_cop_⚠_le &
  [ STEM < "shi4" >,
    SYNSEM.LOCAL.CAT.HEAD.CHAR [ FCHAR "是",
                                 LENGTH one ],
    TRAITS native_token_list ].

是_⚠_cop_py2 := v_adj_cop_⚠_le &
  [ STEM < "shi" >,
    SYNSEM.LOCAL.CAT.HEAD.CHAR [ FCHAR "是",
                                 LENGTH one ],
    TRAITS native_token_list ].

